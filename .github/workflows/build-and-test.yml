name: Go Build and Test

on:
  push: # Triggers on pushes to any branch
  pull_request: # Triggers on pull requests to any branch

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }} (Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.21'] # Specify a recent Go version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run Go tests
        run: go test ./...

      - name: Build Go project
        run: go build ./...
        
  build-and-test-arm64:
    name: Build and Test on Linux ARM64 (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest # This runner will host the Docker container for ARM64
    strategy:
      matrix:
        go-version: ['1.21']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go for ARM64 build environment
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run tests and build on ARM64
        uses: uraimo/run-on-arch-action@v2.7.0 # Using a specific version
        with:
          arch: aarch64 # For ARM64
          distro: ubuntu22.04 # Specify a distro for the container
          githubToken: ${{ github.token }} # Pass the token for private repos, good practice
          # Commands to run inside the ARM64 environment
          run: |
            echo "Inside ARM64 environment"
            # Go commands need to be accessible.
            # The setup-go action runs on the host, so Go might not be in PATH by default in the container.
            # Let's ensure Go is found or explicitly use the path from setup-go if needed.
            # For simplicity, assuming Go installed by setup-go is available or can be sourced.
            # A common pattern is to re-setup Go inside the run-on-arch container if needed,
            # or ensure the environment is correctly passed.
            # Let's try directly first.
            go version
            echo "Running tests on ARM64..."
            go test ./...
            echo "Building project on ARM64..."
            go build ./...
